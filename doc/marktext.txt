*marktext.txt*         Bindings for Marktext's Markdown in Neovim
*marktext*
*nvim-marktext*

===============================================================================
0. Table of Contents                                                *marktext-toc*

1. About ................ |marktext-about|
2. Usage ................ |marktext-usage|
3. Examples ............. |marktext-examples|
4. Configuration ........ |marktext-configuration|
5. License .............. |marktext-license|
6. Bugs ................. |marktext-bugs|
7. Contributing ......... |marktext-contributing|
8. Changelog ............ |marktext-changelog|
9. Credits .............. |marktext-credits|

================================================================================
1. About                                                          *marktext-about*

|nvim-marktext|:
- Author, Iron-E @ https://github.com/Iron-E & https://gitlab.com/Iron_E
- GitHub @ https://github.com/Iron-E/nvim-marktext

|nvim-marktext| is a Neovim |plugin| aimed at providing extended functionality
with the program Marktext (https://marktext.app). It allows the opening and
rendering of `markdown` files, live as they are edited from within Neovim.

|nvim-marktext| requires Neovim 0.5+. Additional requirements are documented
alongside the features that require on them.

See: |ftplugin|

--------------------------------------------------------------------------------
USE CASE                                                       *marktext-use-case*

This plugin may be right for you if you are interested in…

- Extended snippet support for Marktext-specific markdown constructs.
- Previewing/Rendering markdown while you edit.
- Being able to export markdown to PDF using a variety of "themes".
- Quick access to helpful documentation for Marktext, |LaTeX|, etc.

See: |marktext-usage|

================================================================================
2. Usage                                                          *marktext-usage*

The following sections outlines |marktext-usage-commands| and
|marktext-usage-functions| to assist in showcasing everything that this plugin can
do.

                                                            *marktext-usage-links*
Additionally, here are some links to helpful documentation which will help you
write Markdown, LaTeX, Mermaid, and other markup formats which are useful when
using Marktext:

Guide     Link
--------  ----------------------------------------------------------------
LaTeX     https://www.overleaf.com/learn/latex/Tutorials
Markdown  https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet
Mermaid   https://mermaid-js.github.io/mermaid
PlantUML  https://plantuml.com/
Marktext    https://marktext.app

--------------------------------------------------------------------------------
COMMANDS                                                 *marktext-usage-commands*

`:Marktext` [{file}]                                                     *:Marktext*

	Open some {file} in a new window using Marktext.

	Arguments: ~
		{file}  Same as with |marktext-open|.

		NOTE: If {file} is blank, then it will default to the name of the
		      file opened in the current window.

`:MarktextMode`                                                      *:MarktextMode*

	Open a |libmodal-prompt| which will provide |:command-completion| as you
	type to select which template you would like to generate.

	See |marktext-snippets| for more details.

`:TableMode`                                                            *:TableMode*

	Open a |libmodal-mode| which will provide convenient mappings for doing
	complex operations on Markdown tables.

	See |marktext#table_mode()| for more details.

--------------------------------------------------------------------------------
FUNCTIONS                                               *marktext-usage-functions*

                                                                   *marktext-open*
`marktext.open(`[{file}]`)`                                            *marktext.open()*
`marktext#open(`[{file}]`)`                                            *marktext#open()*

	Open a {file} in a new window using Marktext.

	`marktext.open()` is accessed using |lua| and this plugin's `marktext` module: >
		-- Lua
		local marktext = require('marktext')
		marktext.open('./path/to/file.md')
<

	`marktext#open()` is accessed using |:call| from a Vimscript file: >
		" Vimscript
		call marktext#open('./path/to/file.md')
<

	Parameters: ~
		{file}  Describes the path to the file which should be opened.

			NOTE: If unspecified, {file} default to the open file in the
			      current |window|.

`marktext.snippet_mode()`                              *marktext.snippet_mode:enter()*
`marktext#snippet_mode()`                                    *marktext#snippet_mode()*

	Open a |libmodal-prompt| which will provide |:command-completion| as you
	type to select which template you would like to generate.

	NOTE: Depending on the kind of snippet, additional prompts may spawn. For
	      example, the table snippet will ask how many columns are desired.
	      The code-block snippet will ask what language the code is for.

	`marktext.snippet_mode:enter()` is accessed using |lua| and this plugin's
	`marktext` module: >
		-- Lua
		local marktext = require('marktext')
		marktext.snippet_mode:enter()
<
	See also: ~
		- |append()|, the function used as the backbone of the snippet
		  implementation.
		- |libmodal-prompt|, the command prompt implementation.
		- |libmodal-lua-Prompt.enter()|, the command used to enter the prompt.

                                                               *marktext-snippets*
`marktext.table_mode()`                                      *marktext.table_mode()*
`marktext#table_mode()`                                      *marktext#table_mode()*

	Open a |libmodal-mode| which will provide convenient mappings for doing
	complex operations on Markdown tables.

	Below are the mappings and their functions:

	Mapping       Function
	------------  -------------------------------
	`0`, `_`, `^`, `H`    Move to first column
	`h`, <Left>     Move to previous column
	`l`, <Right>    Move to next column
	`$`, `L`          Move to last column
	`i`             Insert column behind.
	`a`             Insert column ahead.
	`I`             Insert column at the beginning.
	`A`             Insert column at the end.
	`r`             Insert new row.
	`s`             Sort the rows.
	`u`             Undo
	`<`, <S-Left>   Move column left.
	`>`, <S-Right>  Move column right.
	`{`             Move column to the beginning.
	`}`             Move column to the end.

================================================================================
3. Examples                                                    *marktext-examples*

None right now.

================================================================================
4. Configuration                                          *marktext-configuration*

None right now.

================================================================================
5. License                                                      *marktext-license*

nvim-marktext — Bindings for Marktext's Markdown in Neovim
Copyright © 2020 Iron-E

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

================================================================================
6. Bugs                                                            *marktext-bugs*

None right now.

================================================================================
7. Contributing                                            *marktext-contributing*

The following describes what should be done if an individual wishes to
contribute something to the `Iron-E/nvim-libmodal` repository.

--------------------------------------------------------------------------------
CODE                                                  *marktext-contributing-code*

Bugfixes ~

If you discover a bug and believe you know the solution to fixing it, then
submit a bug report and state that you are working on a fix (and what that
fix might be), and what general timeframe the fix may be completed in
(months, weeks, days, etc.).

When the fix is complete, submit a PR that references the issue you
submitted.

Features ~

If there is a feature you would like to be a part of |marktext|, the best
thing you can do is submit a feature request, and then state that you are
working on a pull request (PR) so others don't attempt to do the same work
at the same time.

When you believe your feature is complete, write some examples for it in
the `examples/lua` folder, and add them to |marktext-examples| as
appropriate.

Assure that all existing |marktext-examples| continue to work with your
feature, unless a breaking change was discussed on the feature request.
If you need help getting them to pass, you can ask for help on the PR.

Reference the issue you submitted on the PR so that the two show up
together when looking back at the history.

Contributing documentation is not necessary but appreciated, since the
person who knows the most about the feature being implemented is most
likely the one implementing it.

--------------------------------------------------------------------------------
DOCUMENTATION                                *marktext-contributing-documentation*

If there is a problem with the documentation, or you see an area where it
could be improved, don't hesitate to submit an issue and a PR. At the very
least it will exist in history if such an issue comes up again, and likely it
will serve to help yourself and others with more clear and concise wording, or
with more helpful and practical examples.

--------------------------------------------------------------------------------
ISSUES                                              *marktext-contributing-issues*

Issues are greatly welcomed on the GitHub repository, whether they are bug
reports, feature requests, documentation improvements, or misunderstandings:
it's all good to have in the archive.

When submitting an issue, please describe the following:

1. Context regarding the issue (how you discovered it, pertinent information,
   etc.)
2. Detailed description of the issue.
3. Steps to reproduce (if applicable).
4. Expected behavior (if applicable).
5. Attached media (screenshots, logs, etc.) (if applicable).

================================================================================
8. Changelog                                                  *marktext-changelog*

0.2.0 ~

	Additions: ~
	- |libmodal| bindings with `:TableMode`.
	- Various bug fixes.

0.1.0 ~

	Additions: ~
	- |libmodal| bindings with `:MarktextMode`
	- Open Marktext from Neovim using `:Marktext`

================================================================================
9. Credits                                                      *marktext-credits*

Credit                        Reason
---------------------------   ----------------------------------------
iamcco/vim-language-server    Vimscript language server.
Iron-E                        Primary contibuter/maintainer.
mermaid-js/mermaid            Ability to embed graphics into Markdown.
neovim/neovim                 Development platform provider.
neovim/nvim-lspconfig         Development environment provider.
Roberto Ierusalimschy         "Programming In Lua: 5.1".
www.stackoverflow.com         Vimscript and |Lua| reference.
Steve Losh                    "Learn Vimscript The Hard Way".
sumneko/lua-language-server   Lua langauge server.
tbastos/vim-lua               Syntax highlighting for |Lua|.
https://marktext.app             Marktext development.

================================================================================
vim:tw=80:ts=4:ft=help:norl:
